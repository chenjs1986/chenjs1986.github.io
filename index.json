[{"content":"dbConnect: con \u0026lt;- dbConnect(odbc::odbc(), driver = \u0026#34;SQL Server\u0026#34;, server = \u0026#34;10.10.9.57,1433\u0026#34;, database = \u0026#34;DJSX\u0026#34;, uid = \u0026#34;admin\u0026#34;, pwd = \u0026#34;admin\u0026#34;) get data: zsql \u0026lt;- paste(\u0026#34;select 会计年度, - sum(本期余额)/100000000 as 金额 from [DJSX].[dbo].[balance]\rwhere 会计年度 \u0026lt;= \u0026#34; , zyear , \u0026#34;and 会计期间 \u0026lt;= \u0026#34; ,zmonth , \u0026#34;\rand ( [科目] like \u0026#39;271110%\u0026#39; or [科目] like \u0026#39;2721010100\u0026#39; or [科目] like \u0026#39;6031%\u0026#39; ) and not ( [科目] like \u0026#39;6031%\u0026#39; and ( [产品描述] like \u0026#39;%万能%\u0026#39; or [产品描述] like \u0026#39;%投资连结%\u0026#39; )) group by 会计年度 \u0026#34;)\r# 获取数据\rdata122 \u0026lt;- dbGetQuery( con,zsql) output data: dataor %\u0026gt;%\rkbl() %\u0026gt;%\rkable_classic_2( full_width = F , position = \u0026#34;left\u0026#34;) %\u0026gt;% #\radd_header_above(c(\u0026#34;（单位：亿元）\u0026#34; = 1, \u0026#34;2024年\u0026#34; = 2, \u0026#34;2023年\u0026#34; = 2, \u0026#34;2022年\u0026#34; = 1))\r# kbl(caption = \u0026#34;\u0026#34; ,border_box_size = 1 , format = \u0026#34;html\u0026#34;) %\u0026gt;%\r# kable_classic (full_width = F, html_font = \u0026#34;Cambria\u0026#34; , font_size = 16 , position = \u0026#34;left\u0026#34; ) bar: p122 \u0026lt;- ggplot(data122, aes(x = 会计年度, y = 金额 )) + geom_bar(stat = \u0026#34;identity\u0026#34;, width = 0.6, fill = \u0026#34;#1F78B4\u0026#34;) + scale_fill_brewer(palette = \u0026#34;Paired\u0026#34;) + labs(x = \u0026#34;\u0026#34;, y = \u0026#34;\u0026#34;, title = \u0026#34;\u0026#34;) +\rtheme_minimal() + # 添加一个主题以美化图表 theme(\raxis.text.x = element_text(angle = 0, hjust = 1), # X轴标签倾斜50度\rpanel.grid.major = element_line(color = \u0026#34;grey80\u0026#34;), # 主网格线\rpanel.grid.minor = element_blank(), # 次网格线\rpanel.spacing = unit(1, \u0026#34;lines\u0026#34;) # 增加面板之间的间距\r) +\rgeom_text(aes(label = ifelse(round(金额,2) != 0, round(金额,2), \u0026#34;\u0026#34;) ), position = position_stack(vjust = 0.5), size = 4, color = \u0026#34;white\u0026#34;) # 在柱子上添加文本标签 bar + grid: p122 \u0026lt;- ggplot(data122, aes(x = 会计年度, y = 金额, fill = 科目描述)) + geom_bar(stat = \u0026#34;identity\u0026#34;, width = 0.6) + scale_fill_brewer(palette = \u0026#34;Paired\u0026#34;) + facet_grid( rows = vars(科目描述)) + # cols = vars(设计类型描述),\r# theme(axis.text.y = element_text(angle = 50)) +\rlabs(x = \u0026#34;\u0026#34;, y = \u0026#34;\u0026#34;, title = \u0026#34;\u0026#34;) +\rtheme_minimal() + # 添加一个主题以美化图表 theme(\raxis.text.x = element_text(angle = 0, hjust = 1), # X轴标签倾斜50度\rpanel.grid.major = element_line(color = \u0026#34;grey80\u0026#34;), # 主网格线\rpanel.grid.minor = element_blank(), # 次网格线\rpanel.spacing = unit(1, \u0026#34;lines\u0026#34;) # 增加面板之间的间距\r) +\rgeom_text(aes(label = ifelse(round(金额,2) != 0, round(金额,2), \u0026#34;\u0026#34;) ), position = position_stack(vjust = 0.5), size = 4, color = \u0026#34;white\u0026#34;) # 在柱子上添加文本标签 pie + grid: plots \u0026lt;- list()\rfor (year in unique(data122$会计年度)) {\rsubset_data \u0026lt;- data122 %\u0026gt;% filter(会计年度 == year )\rp \u0026lt;- plot_ly(subset_data, labels = ~科目描述, values = ~金额, type = \u0026#39;pie\u0026#39;, textinfo = \u0026#39;label+percent+value\u0026#39; ,sort = FALSE ) %\u0026gt;% layout(showlegend = FALSE , title = paste( year) , margin = list(t = 30) , yanchor = \u0026#39;top\u0026#39; ) # 增加顶部边距 plots[[paste(year)]] \u0026lt;- p\r} # plots\rzstyle = paste(\u0026#34;display: grid; grid-template-columns: repeat(\u0026#34; ,3 , \u0026#34;, 1fr); grid-gap: 8px;\u0026#34;)\rcombined_plot \u0026lt;- tagList(\rtags$div(\rstyle = zstyle ,\rlapply(plots, function(plot) {\rtags$div(style = \u0026#34;border: #ccc; padding: 3px;height: 400px;width: 280px; bottom: 5px;overflow: visible; justify-content: buttom;\u0026#34;, plot)\r})\r)\r)\rcombined_plot sankeyNetwork: zsql \u0026lt;- paste(\u0026#34;select [缴费年期描述] as 缴费年期,\r[缴费年期描述] ,\r[设计类型描述], CASE WHEN 科目描述 LIKE \u0026#39;%续期%\u0026#39; then \u0026#39;续期\u0026#39;\rWHEN 科目描述 LIKE \u0026#39;%期交%\u0026#39; then \u0026#39;新单期交\u0026#39;\rWHEN 科目描述 LIKE \u0026#39;%趸交%\u0026#39; then \u0026#39;新单趸交\u0026#39; else \u0026#39;other\u0026#39;end as [科目描述],\r- sum(本期余额)/100000000 as 本年新增 from [DJSX].[dbo].[balance]\rwhere 会计年度 = \u0026#34; , zyear , \u0026#34;and 会计期间 \u0026lt;= \u0026#34; ,zmonth , \u0026#34;\rand ( [科目] like \u0026#39;271110%\u0026#39; or [科目] like \u0026#39;2721010100\u0026#39; or [科目] like \u0026#39;6031%\u0026#39; ) and not ( [科目] like \u0026#39;6031%\u0026#39; and ( [产品描述] like \u0026#39;%万能%\u0026#39; or [产品描述] like \u0026#39;%投资连结%\u0026#39; )) group by [缴费年期描述] ,\r[设计类型描述], [科目描述]\rhaving sum(本期余额) \u0026lt;= -1000000\r\u0026#34;)\rdatasj \u0026lt;- dbGetQuery( con,zsql)\rdatasj1 \u0026lt;- sqldf(\u0026#34;select distinct 缴费年期描述 ,sum(本年新增) as 本年新增 from datasj group by 缴费年期描述 order by sum(本年新增) desc \u0026#34;)\rdatasj2 \u0026lt;- sqldf(\u0026#34;select distinct 设计类型描述 ,sum(本年新增) as 本年新增 from datasj group by 设计类型描述 order by sum(本年新增) desc \u0026#34;)\rdatasj3 \u0026lt;- sqldf(\u0026#34;select distinct 科目描述 ,sum(本年新增) as 本年新增 from datasj group by 科目描述 order by sum(本年新增) desc \u0026#34;)\rdatasj4 \u0026lt;- sqldf(\u0026#34;select distinct concat(\u0026#39; \u0026#39;,缴费年期) AS 缴费年期 ,sum(本年新增) as 本年新增 from datasj group by 缴费年期 order by sum(本年新增) desc \u0026#34;)\r# 提取所有唯一的节点名称并创建 Nodes 数据框 all_nodes \u0026lt;- unique(c( as.character(datasj1$\u0026#34;缴费年期描述\u0026#34;), as.character(datasj2$\u0026#34;设计类型描述\u0026#34;), as.character(datasj3$\u0026#34;科目描述\u0026#34;) , as.character(datasj4$\u0026#34;缴费年期\u0026#34;) )) Nodes \u0026lt;- data.frame(name = all_nodes) # 合并项目到产品描述的链接与产品描述到渠道描述的链接 links3 \u0026lt;- sqldf(\u0026#34; select 缴费年期描述 as Source , 设计类型描述 as Target , sum(本年新增) as Value ,\u0026#39;\u0026#39; as \u0026#39;source_id\u0026#39; ,\u0026#39;\u0026#39; as \u0026#39;target_id\u0026#39; from datasj\rgroup by 缴费年期描述, 设计类型描述 union all select 设计类型描述 as Source , 科目描述 as Target , sum(本年新增) as Value ,\u0026#39;\u0026#39; as \u0026#39;source_id\u0026#39; ,\u0026#39;\u0026#39; as \u0026#39;target_id\u0026#39; from datasj\rgroup by 设计类型描述, 科目描述 union all select 科目描述 as Source , concat(\u0026#39; \u0026#39;,缴费年期) as Target , sum(本年新增) as Value ,\u0026#39;\u0026#39; as \u0026#39;source_id\u0026#39; ,\u0026#39;\u0026#39; as \u0026#39;target_id\u0026#39; from datasj\rgroup by 科目描述, 缴费年期 \u0026#34;) Nodes$name \u0026lt;- c(as.character(Nodes$name))\rlinks3$Source \u0026lt;- as.character(links3$Source) links3$Target \u0026lt;- as.character(links3$Target) links3$source_id \u0026lt;- match(links3$Source, Nodes$name) - 1\rlinks3$target_id \u0026lt;- match(links3$Target, Nodes$name) - 1\rlinks3$Source = paste(links3$Source, \u0026#34;: \u0026#34;, round(links3$Value,2) , sep=\u0026#34;\u0026#34;)\rlinks3$Target = paste(links3$Target, \u0026#34;: \u0026#34;, round(links3$Value,2) , sep=\u0026#34;\u0026#34;)\r# 绘制桑基图 plot \u0026lt;- sankeyNetwork(Links = links3, Nodes = Nodes, Source = \u0026#34;source_id\u0026#34;, Target = \u0026#34;target_id\u0026#34;, Value = \u0026#34;Value\u0026#34;, #LinkGroup = \u0026#39;source_id\u0026#39;, # 颜色分组\rNodeID = \u0026#34;name\u0026#34;,\rfontSize = 12, nodeWidth = 30, units = \u0026#34;亿元\u0026#34;) # 使用 onRender 函数添加自定义 JavaScript 代码\rplot \u0026lt;- onRender(plot, \u0026#39;\rfunction(el, x) {\r// Select all links\rd3.select(el).selectAll(\u0026#34;.link\u0026#34;)\r.append(\u0026#34;title\u0026#34;)\r.text(function(d) { return d.value + \u0026#34; 亿元\u0026#34;; });\r}\r\u0026#39;)\r# 展示桑基图 plot sunburst: zsql \u0026lt;- paste(\u0026#34;select [缴费年期描述] ,\r[产品描述], CASE WHEN 科目描述 LIKE \u0026#39;%续期%\u0026#39; then \u0026#39;续期\u0026#39;\rWHEN 科目描述 LIKE \u0026#39;%期交%\u0026#39; then \u0026#39;新单期交\u0026#39;\rWHEN 科目描述 LIKE \u0026#39;%趸交%\u0026#39; then \u0026#39;新单趸交\u0026#39; else \u0026#39;other\u0026#39;end as [科目描述],\r- sum(本期余额)/100000000 as 本年新增 from [DJSX].[dbo].[balance]\rwhere 会计年度 = \u0026#34; , zyear , \u0026#34;and 会计期间 \u0026lt;= \u0026#34; ,zmonth , \u0026#34;\rand ( [科目] like \u0026#39;271110%\u0026#39; or [科目] like \u0026#39;2721010100\u0026#39; or [科目] like \u0026#39;6031%\u0026#39; ) and not ( [科目] like \u0026#39;6031%\u0026#39; and ( [产品描述] like \u0026#39;%万能%\u0026#39; or [产品描述] like \u0026#39;%投资连结%\u0026#39; )) group by [缴费年期描述] ,\r[产品描述], [科目描述]\rhaving sum(本期余额) \u0026lt;= -1000000\r\u0026#34;)\r# 获取数据\rdf \u0026lt;- dbGetQuery( con,zsql) # 创建新的数据框df1\rdf1 \u0026lt;- sqldf(\u0026#34; select \u0026#39;旧准则保费收入\u0026#39; as parents ,产品描述 as ids , concat(产品描述, concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by 产品描述 union all select 产品描述 as parents ,CONCAT(产品描述,科目描述) as ids , concat(科目描述,concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by 产品描述 ,CONCAT(产品描述,科目描述)\runion all select CONCAT(产品描述,科目描述) ,CONCAT(CONCAT(产品描述,科目描述),缴费年期描述) ,concat(缴费年期描述,concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by CONCAT(产品描述,科目描述) ,CONCAT(CONCAT(产品描述,科目描述),缴费年期描述)\u0026#34;)\r# 创建旭日图\rfig1 \u0026lt;- plot_ly( df1, ids = ~ids, labels = ~labels, parents = ~parents, values = ~value ,\rtype = \u0026#39;sunburst\u0026#39;,\rbranchvalues = \u0026#39;total\u0026#39;\r)\rfig1 \u0026lt;- fig1 %\u0026gt;% layout(\rtitle = \u0026#34;产品描述优先\u0026#34; ,\rshowlegend = FALSE,\rautosize = T,\r# width = 500,\r# height = 500,\rmargin = list( t = 40 ),\r# margin = list( l = 50, r = 50, b = 100, t = 100, pad = 4 ),\rpaper_bgcolor = \u0026#34;white\u0026#34;,\rplot_bgcolor = \u0026#34;white\u0026#34;\r)\r# 创建新的数据框df1\rdf2 \u0026lt;- sqldf(\u0026#34; select \u0026#39;旧准则保费收入\u0026#39; as parents ,科目描述 as ids , concat(科目描述, concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by 科目描述 union all select 科目描述 as parents ,CONCAT(科目描述,产品描述) as ids , concat(产品描述,concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by 科目描述 ,CONCAT(科目描述,产品描述)\runion all select CONCAT(科目描述,产品描述) ,CONCAT(CONCAT(科目描述,产品描述),缴费年期描述) ,concat(缴费年期描述,concat(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;,round(sum(本年新增),2) )) as labels, sum(本年新增) as value from df group by CONCAT(科目描述,产品描述) ,CONCAT(CONCAT(科目描述,产品描述),缴费年期描述)\u0026#34;)\r# 创建旭日图\rfig2 \u0026lt;- plot_ly( df2, ids = ~ids, labels = ~labels, parents = ~parents, values = ~value ,\rtype = \u0026#39;sunburst\u0026#39;,\rbranchvalues = \u0026#39;total\u0026#39;\r)\rfig2 \u0026lt;- fig2 %\u0026gt;% layout(\rtitle = \u0026#34;首续期优先\u0026#34; ,\rshowlegend = FALSE,\rautosize = T,\r# width = 500,\r# height = 500,\rmargin = list( t = 40 ),\r# margin = list( l = 50, r = 50, b = 100, t = 100, pad = 4 ),\rpaper_bgcolor = \u0026#34;white\u0026#34;,\rplot_bgcolor = \u0026#34;white\u0026#34;\r)\r# 将图表对象放入列表中\rplots \u0026lt;- list(fig1, fig2)\r# 设置网格样式\rzstyle \u0026lt;- \u0026#34;display: grid; grid-template-columns: repeat(2, 1fr); grid-gap: 8px;width: 100%;\u0026#34;\r# 组合图表\rcombined_plot \u0026lt;- tagList(\rtags$div(\rstyle = zstyle,\rlapply(plots, function(plot) {\rtags$div(\rstyle = \u0026#34;border: 0px solid #ccc; padding: 3px; height: 450px; width: 450px; overflow: visible; justify-content: bottom;\u0026#34;, plot\r)\r})\r)\r)\r# 显示组合图表\rcombined_plot ","permalink":"https://chenjs1986.github.io/posts/r-2.-r-model/","summary":"dbConnect: con \u0026lt;- dbConnect(odbc::odbc(), driver = \u0026#34;SQL Server\u0026#34;, server = \u0026#34;10.10.9.57,1433\u0026#34;, database = \u0026#34;DJSX\u0026#34;, uid = \u0026#34;admin\u0026#34;, pwd = \u0026#34;admin\u0026#34;) get data: zsql \u0026lt;- paste(\u0026#34;select 会计年度, - sum(本期余额)/100000000 as 金额 from [DJSX].[dbo].[balance]\rwhere 会计年度 \u0026lt;= \u0026#34; , zyear , \u0026#34;and 会计期间 \u0026lt;= \u0026#34; ,zmonth , \u0026#34;\rand ( [科目] like \u0026#39;271110%\u0026#39; or [科目] like \u0026#39;2721010100\u0026#39; or [科目] like \u0026#39;6031%\u0026#39; ) and not ( [科目] like \u0026#39;6031%\u0026#39; and ( [产品描述] like \u0026#39;%万能%\u0026#39; or [产品描述] like \u0026#39;%投资连结%\u0026#39; )) group by 会计年度 \u0026#34;)\r# 获取数据\rdata122 \u0026lt;- dbGetQuery( con,zsql) output data: dataor %\u0026gt;%\rkbl() %\u0026gt;%\rkable_classic_2( full_width = F , position = \u0026#34;left\u0026#34;) %\u0026gt;% #\radd_header_above(c(\u0026#34;（单位：亿元）\u0026#34; = 1, \u0026#34;2024年\u0026#34; = 2, \u0026#34;2023年\u0026#34; = 2, \u0026#34;2022年\u0026#34; = 1))\r# kbl(caption = \u0026#34;\u0026#34; ,border_box_size = 1 , format = \u0026#34;html\u0026#34;) %\u0026gt;%\r# kable_classic (full_width = F, html_font = \u0026#34;Cambria\u0026#34; , font_size = 16 , position = \u0026#34;left\u0026#34; ) bar: p122 \u0026lt;- ggplot(data122, aes(x = 会计年度, y = 金额 )) + geom_bar(stat = \u0026#34;identity\u0026#34;, width = 0.","title":"R - make plots"},{"content":"If you have much data and often need to share with colleagues, I recommend you to set up a web server and design some online websites for needer to get.\nMaybe someone has a question, to build a web server seems difficult, why don’t find other solutions?\nI really try to do but it’s not easy. I once tried output data to RPT documents and transferred to others, but it’ll spend myself too much time.\nAnd I also tried to write some scripts to coworkers, let them run this scripts on sqlserver studio. But it was hard to them. They are just accountants.\nSo I decided to build a web server.\nTo build a web server is not difficult as you thought. I spent just two days to this. I downloaded XAMPP and installed it. There are many instructions to follow, so please don’t fear about it. There are many templates that we can used to design php websites. You just need to through the beginning then the next things will be easy.\na example link: web example.zip\n","permalink":"https://chenjs1986.github.io/posts/web-1.build-a-web-server/","summary":"If you have much data and often need to share with colleagues, I recommend you to set up a web server and design some online websites for needer to get.\nMaybe someone has a question, to build a web server seems difficult, why don’t find other solutions?\nI really try to do but it’s not easy. I once tried output data to RPT documents and transferred to others, but it’ll spend myself too much time.","title":"Build a web server "},{"content":"I used two main database. One is Mysql,anther is Sqlserver.\nEarly, Mysql is the best choice for me. It\u0026rsquo;s handy and friendly. A financial personal database were builded by it. I downloaded data from CS/BS client and import it into Mysql.\nThen I wrote many sql-language script to get many statements or reports quickly. It\u0026rsquo;s saving much of time for me.\nNow,I use sqlserver to manage huge data because of Mysql support huge data poorly.\nSqlserver is amazing database. Whatever how many items ,it can handle.\nEND,I recomment the workbench,Sqlserver studio and dbeaver to manage date. Especially,the dbeaver is very helpful to import big txt or csv documents.\nNormal search sql grammar: With temp as\nSelect/delete/update/insert into…\nTop/Distinct\nSum/Count/average/max/min/round…\nCase when xxx then xxx else xxx end as xxx\nfrom database.table\nInner join/left join/right join/full join/self join\nWhere\nAnd\nAnd not\nAnd exists\nAnd not exists\nOr\nLike/between/in/not in/\nGroup by\nHaving\nOrder by\nUnion all /Union\nSoftware download links: Mysql: Mysql software(https://www.mysql.com/downloads/)\nWorkbench for Mysql(https://www.mysql.com/products/workbench/) Sqlserver Sql server(https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads)\nSql server studio(https://learn.microsoft.com/zh-cn/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver16) For all Dbeaver (https://dbeaver.io/download/) ","permalink":"https://chenjs1986.github.io/posts/database-1.-the-database-i-used/","summary":"I used two main database. One is Mysql,anther is Sqlserver.\nEarly, Mysql is the best choice for me. It\u0026rsquo;s handy and friendly. A financial personal database were builded by it. I downloaded data from CS/BS client and import it into Mysql.\nThen I wrote many sql-language script to get many statements or reports quickly. It\u0026rsquo;s saving much of time for me.\nNow,I use sqlserver to manage huge data because of Mysql support huge data poorly.","title":"The database I used"},{"content":"R is a very famous programming language. R was designed by statisticians who want analysis to be easy.\nWe can use R to analyze data or formal digraph. I usually take some graph by R. As you know, many tasks are very similar in our work and we must do them again and again just because some data is changed. It will spend our much time and it’s very boring. But if you have R, you can do this easily. NEXT, I will share what I do with R.\nThere are two important things for analysis. One is data, another is analytic process.\nHere are some analytical steps:\nBuild a database Make a script to download data and import to database Find a proposal and make a R script Run the R script at R-studio Upon steps are the basic method to get a digraph.\nBesides that, you also need to get these knowledge. These are lists:\nDatabase knowledge, it’ll help you to get data R packages knowledge, it’ll help you to form figure Finally, it’s better if you take some tips about RMD for html. The html documents which can be generated automatically could be published as websites.\na couple of examples link: (The example\u0026rsquo;s data was multipied by randon number, so the report just show charts which are no real means. ) first R-example\nfirst R-example code document\nsecond R-example\nsecond R-example code document\n","permalink":"https://chenjs1986.github.io/posts/r-1.-what-i-to-do-with-r/","summary":"R is a very famous programming language. R was designed by statisticians who want analysis to be easy.\nWe can use R to analyze data or formal digraph. I usually take some graph by R. As you know, many tasks are very similar in our work and we must do them again and again just because some data is changed. It will spend our much time and it’s very boring. But if you have R, you can do this easily.","title":"What to do with R?"},{"content":"What is IFRS17? Ifrs17 is an international accounting standard for insurance contracts. It\u0026rsquo;s very difficult. Since the standard was pubilshed, there are many discussion about it. Many people welcomed it ,mean while others didn\u0026rsquo;t like it. WHY? The standard let insurance company clarify it\u0026rsquo;s profit how constitute. so for users , like investors , the profit will be very clear and let investors be more easy to take decisions. But for insurance companies, it will spend their much time to prepare for reports.\nAnd companies are ranked by income in the Global Fortune 500 but the standard will cut much insurance company\u0026rsquo;s income, so many big insurance companies will decrease in the Global Fortune 500\u0026rsquo;s list.\n","permalink":"https://chenjs1986.github.io/posts/irfs17-1.introduce/","summary":"What is IFRS17? Ifrs17 is an international accounting standard for insurance contracts. It\u0026rsquo;s very difficult. Since the standard was pubilshed, there are many discussion about it. Many people welcomed it ,mean while others didn\u0026rsquo;t like it. WHY? The standard let insurance company clarify it\u0026rsquo;s profit how constitute. so for users , like investors , the profit will be very clear and let investors be more easy to take decisions. But for insurance companies, it will spend their much time to prepare for reports.","title":"IFRS17-introduce "}]